From 0cf7056927479f4425ad40f8005a6c2ee9028ec0 Mon Sep 17 00:00:00 2001
From: darkraven <drdarkraven@gmail.com>
Date: Thu, 20 Sep 2012 16:44:05 +0800
Subject: [PATCH 2/3] handle CT_WORKSPACEs separately.

Specifically handle CT_WORKSPACE.

Also added a helper function render_con_fullscreen.
---
 src/render.c | 58 +++++++++++++++++++++++++++++++++++-----------------------
 1 file changed, 35 insertions(+), 23 deletions(-)

diff --git a/src/render.c b/src/render.c
index 3961332..986c637 100644
--- a/src/render.c
+++ b/src/render.c
@@ -16,6 +16,26 @@
  * container (for debugging purposes) */
 static bool show_debug_borders = false;
 
+/* Check for fullscreen nodes and take the short-cut to render them directly.
+ * Return value indicates if there are fullscreen nodes. */
+static bool render_con_fullscreen(Con *con) {
+    Con *fullscreen = NULL;
+    fullscreen = con_get_fullscreen_con(con, (con->type == CT_ROOT ? CF_GLOBAL : CF_OUTPUT));
+    if (fullscreen) {
+        fullscreen->rect = con->rect;
+        if (show_debug_borders){
+            fullscreen->rect.x += 2;
+            fullscreen->rect.y += 2;
+            fullscreen->rect.width -= 2 * 2;
+            fullscreen->rect.height -= 2 * 2;
+        }
+        x_raise_con(fullscreen);
+        render_con(fullscreen, true);
+        return true;
+    }
+    return false;
+}
+
 /*
  * Renders a container with layout L_OUTPUT. In this layout, all CT_DOCKAREAs
  * get the height of their content and the remaining CT_CON gets the rest.
@@ -50,13 +70,8 @@ static void render_l_output(Con *con) {
      * and take the short-cut to render it directly (the user does not want to
      * see the dockareas in that case) */
     Con *ws = con_get_fullscreen_con(content, CF_OUTPUT);
-    Con *fullscreen = con_get_fullscreen_con(ws, CF_OUTPUT);
-    if (fullscreen) {
-        fullscreen->rect = con->rect;
-        x_raise_con(fullscreen);
-        render_con(fullscreen, true);
+    if (render_con_fullscreen(ws))
         return;
-    }
 
     /* First pass: determine the height of all CT_DOCKAREAs (the sum of their
      * children) and figure out how many pixels we have left for the rest */
@@ -98,6 +113,7 @@ static void render_l_output(Con *con) {
     }
 }
 
+
 /* Render all children of a given con */
 void render_child(Con *con) {
     Con *child;
@@ -338,30 +354,26 @@ void render_con(Con *con, bool render_fullscreen) {
         }
 
         DLOG("child will be at %dx%d with size %dx%d\n", inset->x, inset->y, inset->width, inset->height);
-    }
-
-    /* Check for fullscreen nodes */
-    Con *fullscreen = NULL;
-    if (con->type != CT_OUTPUT) {
-        fullscreen = con_get_fullscreen_con(con, (con->type == CT_ROOT ? CF_GLOBAL : CF_OUTPUT));
-    }
-    if (fullscreen) {
-        fullscreen->rect = rect;
-        x_raise_con(fullscreen);
-        render_con(fullscreen, true);
-        return;
-    }
-
-    if (con->layout == L_OUTPUT) {
+    } else if (con->layout == L_OUTPUT) {
         /* Case 2: this con is a output con */
         /* Skip i3-internal outputs */
         if (con->name[0] == '_' && con->name[1] == '_')
             return;
         render_l_output(con);
+    } else if (con->type == CT_WORKSPACE) {
+        /* Case 3: this con is a workspace con */
+        /* Check for fullscreen nodes */
+        if (render_con_fullscreen(con))
+            return;
+
+        render_child(con);
     } else if (con->type == CT_ROOT) {
-        /* Case 3: this con is the root con */
+        /* Case 4: this con is the root con */
         Con *output;
 
+        if (render_con_fullscreen(con))
+            return;
+
         TAILQ_FOREACH(output, &(con->nodes_head), nodes)
             render_con(output, false);
 
@@ -407,6 +419,6 @@ void render_con(Con *con, bool render_fullscreen) {
         }
 
     } else
-        /* Case 4: otherwise simply render its children */
+        /* Case 5: otherwise simply render its children */
         render_child(con);
 }
-- 
1.7.12

